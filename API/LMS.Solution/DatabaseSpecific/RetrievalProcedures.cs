//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SD.LLBLGen.Pro.QuerySpec.Adapter;

namespace LMS.Application.LLBL.DatabaseSpecific
{
	/// <summary>Class which contains the static logic to execute retrieval stored procedures in the database.</summary>
	public static partial class RetrievalProcedures
	{

		/// <summary>Calls stored procedure 'SpAvailableBookSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpAvailableBookSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpAvailableBookSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpAvailableBookSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpAvailableBookSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpAvailableBookSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpAvailableBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpAvailableBookSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpAvailableBookSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpAvailableBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpAvailableBookSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpAvailableBookSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpBookGenreSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookGenreSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBookGenreSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBookGenreSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookGenreSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBookGenreSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookGenreSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookGenreSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBookGenreSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookGenreSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookGenreSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBookGenreSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpBookSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBookSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBookSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBookSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBookSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBookSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpBorrowSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBorrowSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBorrowSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBorrowSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBorrowSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBorrowSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBorrowSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBorrowSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBorrowSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBorrowSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBorrowSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBorrowSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpCustomerMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpCustomerMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpCustomerMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpCustomerMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpCustomerMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpCustomerMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpDashboardSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpDashboardSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpDashboardSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpDashboardSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpDashboardSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpDashboardSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpDashboardSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpDashboardSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpDashboardSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpDashboardSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpDashboardSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpDashboardSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpMembershipTypeSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpMembershipTypeSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpMembershipTypeSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpMembershipTypeSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpMembershipTypeSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpMembershipTypeSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpMembershipTypeSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpMembershipTypeSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpMembershipTypeSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpMembershipTypeSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpMembershipTypeSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpMembershipTypeSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNavigationSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNavigationSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNavigationSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNavigationSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNavigationSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNavigationSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNavigationSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNavigationSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNavigationSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNavigationSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNavigationSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNavigationSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNewBookSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewBookSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNewBookSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNewBookSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewBookSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNewBookSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewBookSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNewBookSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewBookSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewBookSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNewBookSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNewCustomerDetailSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewCustomerDetailSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNewCustomerDetailSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNewCustomerDetailSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewCustomerDetailSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNewCustomerDetailSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewCustomerDetailSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewCustomerDetailSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNewCustomerDetailSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewCustomerDetailSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewCustomerDetailSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNewCustomerDetailSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNewCustomerMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewCustomerMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNewCustomerMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNewCustomerMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewCustomerMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNewCustomerMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewCustomerMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewCustomerMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNewCustomerMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewCustomerMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewCustomerMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNewCustomerMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNewMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNewMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNewMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNewMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNewMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNewMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpNewUserSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewUserSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpNewUserSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpNewUserSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpNewUserSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpNewUserSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewUserSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewUserSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpNewUserSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpNewUserSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpNewUserSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpNewUserSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpRealTimeBorrowChargeSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpRealTimeBorrowChargeSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpRealTimeBorrowChargeSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpRealTimeBorrowChargeSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpRealTimeBorrowChargeSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpRealTimeBorrowChargeSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpRealTimeBorrowChargeSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpRealTimeBorrowChargeSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpRealTimeBorrowChargeSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpRealTimeBorrowChargeSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpRealTimeBorrowChargeSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpRealTimeBorrowChargeSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserLogin'.<br/><br/></summary>
		/// <param name="jsonInput">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserLogin(System.String jsonInput)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserLogin(jsonInput, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserLogin'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="jsonInput">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserLogin(System.String jsonInput, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserLoginCall(dataAccessProvider, jsonInput))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserLogin'.</summary>
		/// <param name="jsonInput">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserLoginCallAsQuery(System.String jsonInput)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserLoginCallAsQuery(jsonInput, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserLogin'.</summary>
		/// <param name="jsonInput">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserLoginCallAsQuery(System.String jsonInput, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserLoginCall(dataAccessProvider, jsonInput).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserMembershipSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserMembershipSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserMembershipSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserMembershipSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserMembershipSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserMembershipSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserMembershipSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserMembershipSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserMembershipSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserMembershipSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserMembershipSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpUserTypeSel'.<br/><br/></summary>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserTypeSel(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpUserTypeSel(json, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpUserTypeSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpUserTypeSel(System.String json, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpUserTypeSelCall(dataAccessProvider, json))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserTypeSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserTypeSelCallAsQuery(System.String json)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpUserTypeSelCallAsQuery(json, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpUserTypeSel'.</summary>
		/// <param name="json">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpUserTypeSelCallAsQuery(System.String json, IDataAccessCore dataAccessProvider)
		{
			return CreateSpUserTypeSelCall(dataAccessProvider, json).ToRetrievalQuery();
		}

		/// <summary>Creates the call object for the call 'SpAvailableBookSel' to stored procedure 'SpAvailableBookSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpAvailableBookSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpAvailableBookSel]", "SpAvailableBookSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpBookGenreSel' to stored procedure 'SpBookGenreSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBookGenreSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpBookGenreSel]", "SpBookGenreSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpBookSel' to stored procedure 'SpBookSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBookSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpBookSel]", "SpBookSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpBorrowSel' to stored procedure 'SpBorrowSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBorrowSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpBorrowSel]", "SpBorrowSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpCustomerMembershipSel' to stored procedure 'SpCustomerMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpCustomerMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpCustomerMembershipSel]", "SpCustomerMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpDashboardSel' to stored procedure 'SpDashboardSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpDashboardSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpDashboardSel]", "SpDashboardSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpMembershipSel' to stored procedure 'SpMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpMembershipSel]", "SpMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpMembershipTypeSel' to stored procedure 'SpMembershipTypeSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpMembershipTypeSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpMembershipTypeSel]", "SpMembershipTypeSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNavigationSel' to stored procedure 'SpNavigationSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNavigationSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpNavigationSel]", "SpNavigationSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNewBookSel' to stored procedure 'SpNewBookSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNewBookSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpNewBookSel]", "SpNewBookSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNewCustomerDetailSel' to stored procedure 'SpNewCustomerDetailSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNewCustomerDetailSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpNewCustomerDetailSel]", "SpNewCustomerDetailSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNewCustomerMembershipSel' to stored procedure 'SpNewCustomerMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNewCustomerMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpNewCustomerMembershipSel]", "SpNewCustomerMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNewMembershipSel' to stored procedure 'SpNewMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNewMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpNewMembershipSel]", "SpNewMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpNewUserSel' to stored procedure 'SpNewUserSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpNewUserSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpNewUserSel]", "SpNewUserSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpRealTimeBorrowChargeSel' to stored procedure 'SpRealTimeBorrowChargeSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpRealTimeBorrowChargeSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpRealTimeBorrowChargeSel]", "SpRealTimeBorrowChargeSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserLogin' to stored procedure 'SpUserLogin'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="jsonInput">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserLoginCall(IDataAccessCore dataAccessProvider, System.String jsonInput)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpUserLogin]", "SpUserLogin")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, jsonInput);
		}

		/// <summary>Creates the call object for the call 'SpUserMembershipSel' to stored procedure 'SpUserMembershipSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserMembershipSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpUserMembershipSel]", "SpUserMembershipSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserSel' to stored procedure 'SpUserSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpUserSel]", "SpUserSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}

		/// <summary>Creates the call object for the call 'SpUserTypeSel' to stored procedure 'SpUserTypeSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="json">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpUserTypeSelCall(IDataAccessCore dataAccessProvider, System.String json)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[Suraj_LMS].[dbo].[SpUserTypeSel]", "SpUserTypeSel")
							.AddParameter("@Json", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, json);
		}


	}
}
